{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FileReaderComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"div\")(1, \"h3\");\n    i0.ÉµÉµtext(2, \"\\uD83E\\uDDE0 Answer:\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"p\");\n    i0.ÉµÉµtext(4);\n    i0.ÉµÉµelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(4);\n    i0.ÉµÉµtextInterpolate(ctx_r0.answer);\n  }\n}\nexport class FileReaderComponent {\n  constructor(http) {\n    this.http = http;\n    this.selectedFile = null;\n    this.question = '';\n    this.answer = '';\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  uploadFile() {\n    if (!this.selectedFile) return;\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n    this.http.post('http://localhost:5000/upload', formData).subscribe(re);\n  }\n  static {\n    this.Éµfac = function FileReaderComponent_Factory(t) {\n      return new (t || FileReaderComponent)(i0.ÉµÉµdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n      type: FileReaderComponent,\n      selectors: [[\"app-file-reader\"]],\n      decls: 12,\n      vars: 4,\n      consts: [[1, \"container\"], [\"type\", \"file\", \"accept\", \".pdf,.png,.jpg,.jpeg\", 3, \"change\"], [3, \"disabled\", \"click\"], [\"type\", \"text\", \"placeholder\", \"Ask something about the file...\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"]],\n      template: function FileReaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ÉµÉµtext(2, \"\\uD83D\\uDCC4 File Reader Q&A\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(3, \"input\", 1);\n          i0.ÉµÉµlistener(\"change\", function FileReaderComponent_Template_input_change_3_listener($event) {\n            return ctx.onFileSelected($event);\n          });\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(4, \"button\", 2);\n          i0.ÉµÉµlistener(\"click\", function FileReaderComponent_Template_button_click_4_listener() {\n            return ctx.uploadFile();\n          });\n          i0.ÉµÉµtext(5, \"Upload\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelement(6, \"br\")(7, \"br\");\n          i0.ÉµÉµelementStart(8, \"input\", 3);\n          i0.ÉµÉµlistener(\"ngModelChange\", function FileReaderComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.question = $event;\n          });\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµelementStart(9, \"button\", 2);\n          i0.ÉµÉµlistener(\"click\", function FileReaderComponent_Template_button_click_9_listener() {\n            return ctx.askQuestion();\n          });\n          i0.ÉµÉµtext(10, \"Ask\");\n          i0.ÉµÉµelementEnd();\n          i0.ÉµÉµtemplate(11, FileReaderComponent_div_11_Template, 5, 1, \"div\", 4);\n          i0.ÉµÉµelementEnd();\n        }\n        if (rf & 2) {\n          i0.ÉµÉµadvance(4);\n          i0.ÉµÉµproperty(\"disabled\", !ctx.selectedFile);\n          i0.ÉµÉµadvance(4);\n          i0.ÉµÉµproperty(\"ngModel\", ctx.question);\n          i0.ÉµÉµadvance(1);\n          i0.ÉµÉµproperty(\"disabled\", !ctx.question);\n          i0.ÉµÉµadvance(2);\n          i0.ÉµÉµproperty(\"ngIf\", ctx.answer);\n        }\n      },\n      dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ÉµÉµelementStart","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµadvance","ÉµÉµtextInterpolate","ctx_r0","answer","FileReaderComponent","constructor","http","selectedFile","question","onFileSelected","event","target","files","uploadFile","formData","FormData","append","post","subscribe","re","ÉµÉµdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","FileReaderComponent_Template","rf","ctx","ÉµÉµlistener","FileReaderComponent_Template_input_change_3_listener","$event","FileReaderComponent_Template_button_click_4_listener","ÉµÉµelement","FileReaderComponent_Template_input_ngModelChange_8_listener","FileReaderComponent_Template_button_click_9_listener","askQuestion","ÉµÉµtemplate","FileReaderComponent_div_11_Template","ÉµÉµproperty"],"sources":["D:\\L&T projects\\file-ai-chat\\src\\app\\file-reader\\file-reader.component.ts","D:\\L&T projects\\file-ai-chat\\src\\app\\file-reader\\file-reader.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-file-reader',\n  templateUrl: './file-reader.component.html',\n  styleUrls: ['./file-reader.component.css']\n})\nexport class FileReaderComponent {\n  selectedFile: File | null = null;\n  question: string = '';\n  answer: string = '';\n\n  constructor(private http: HttpClient) {}\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  uploadFile() {\n    if (!this.selectedFile) return;\n\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n\n    this.http.post<any>('http://localhost:5000/upload', formData).subscribe(\n      re\n","<div class=\"container\">\n  <h2>ðŸ“„ File Reader Q&A</h2>\n\n  <!-- File Upload -->\n  <input type=\"file\" (change)=\"onFileSelected($event)\" accept=\".pdf,.png,.jpg,.jpeg\" />\n  <button (click)=\"uploadFile()\" [disabled]=\"!selectedFile\">Upload</button>\n\n  <br /><br />\n\n  <!-- Ask Question -->\n  <input type=\"text\" [(ngModel)]=\"question\" placeholder=\"Ask something about the file...\" />\n  <button (click)=\"askQuestion()\" [disabled]=\"!question\">Ask</button>\n\n  <div *ngIf=\"answer\">\n    <h3>ðŸ§  Answer:</h3>\n    <p>{{ answer }}</p>\n  </div>\n</div>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}