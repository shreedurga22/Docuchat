{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FileReaderComponent {\n  constructor(http) {\n    this.http = http;\n    this.selectedLanguage = 'English';\n    this.question = '';\n    this.answer = '';\n    this.languages = ['English', 'Hindi', 'Tamil', 'Malayalam', 'Telugu', 'French', 'Spanish', 'German'];\n    this.BASE_URL = 'http://localhost:5000';\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  uploadFile() {\n    if (!this.selectedFile) {\n      alert('Please select a file!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n    formData.append('language', this.selectedLanguage);\n    this.http.post(`${this.BASE_URL}/upload`, formData).subscribe({\n      next: res => {\n        alert(res.message);\n        this.answer = '';\n      },\n      error: err => {\n        console.error(err);\n        alert('File upload failed!');\n      }\n    });\n  }\n  askQuestion() {\n    if (!this.question) {\n      alert('Please type a question!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('question', this.question);\n    this.http.post(`${this.BASE_URL}/ask`, formData).subscribe({\n      next: res => {\n        this.answer = res.answer;\n      },\n      error: err => {\n        console.error(err);\n        alert('Failed to get answer!');\n      }\n    });\n  }\n  static {\n    this.ɵfac = function FileReaderComponent_Factory(t) {\n      return new (t || FileReaderComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FileReaderComponent,\n      selectors: [[\"app-file-reader\"]],\n      decls: 0,\n      vars: 0,\n      template: function FileReaderComponent_Template(rf, ctx) {},\n      styles: [\".container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: auto;\\n  padding: 20px;\\n}\\n\\ninput[type=\\\"file\\\"][_ngcontent-%COMP%], input[type=\\\"text\\\"][_ngcontent-%COMP%], select[_ngcontent-%COMP%], button[_ngcontent-%COMP%] {\\n  display: block;\\n  margin: 10px 0;\\n  width: 100%;\\n  padding: 8px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmlsZS1yZWFkZXIvZmlsZS1yZWFkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0UsY0FBYztFQUNkLGNBQWM7RUFDZCxXQUFXO0VBQ1gsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gIG1heC13aWR0aDogNjAwcHg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJmaWxlXCJdLCBpbnB1dFt0eXBlPVwidGV4dFwiXSwgc2VsZWN0LCBidXR0b24ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbjogMTBweCAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDhweDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FileReaderComponent","constructor","http","selectedLanguage","question","answer","languages","BASE_URL","onFileSelected","event","selectedFile","target","files","uploadFile","alert","formData","FormData","append","post","subscribe","next","res","message","error","err","console","askQuestion","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","template","FileReaderComponent_Template","rf","ctx","styles"],"sources":["D:\\L&T projects\\file-ai-chat\\src\\app\\file-reader\\file-reader.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-file-reader',\n  templateUrl: './file-reader.component.html',\n  styleUrls: ['./file-reader.component.css']\n})\nexport class FileReaderComponent {\n\n  selectedFile!: File;\n  selectedLanguage: string = 'English';\n  question: string = '';\n  answer: string = '';\n  languages: string[] = [\n    'English', 'Hindi', 'Tamil', 'Malayalam', 'Telugu', 'French', 'Spanish', 'German'\n  ];\n\n  private BASE_URL = 'http://localhost:5000';\n\n  constructor(private http: HttpClient) { }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  uploadFile() {\n    if (!this.selectedFile) {\n      alert('Please select a file!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n    formData.append('language', this.selectedLanguage);\n\n    this.http.post(`${this.BASE_URL}/upload`, formData)\n      .subscribe({\n        next: (res: any) => { \n          alert(res.message); \n          this.answer = ''; \n        },\n        error: (err) => { \n          console.error(err); \n          alert('File upload failed!'); \n        }\n      });\n  }\n\n  askQuestion() {\n    if (!this.question) {\n      alert('Please type a question!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('question', this.question);\n\n    this.http.post(`${this.BASE_URL}/ask`, formData)\n      .subscribe({\n        next: (res: any) => { this.answer = res.answer; },\n        error: (err) => { \n          console.error(err); \n          alert('Failed to get answer!'); \n        }\n      });\n  }\n}\n\n"],"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAY9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IATxB,KAAAC,gBAAgB,GAAW,SAAS;IACpC,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,MAAM,GAAW,EAAE;IACnB,KAAAC,SAAS,GAAa,CACpB,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAClF;IAEO,KAAAC,QAAQ,GAAG,uBAAuB;EAEF;EAExCC,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EAEAC,UAAUA,CAAA;IACR,IAAI,CAAC,IAAI,CAACH,YAAY,EAAE;MACtBI,KAAK,CAAC,uBAAuB,CAAC;MAC9B;;IAGF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACP,YAAY,CAAC;IAC1CK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACd,gBAAgB,CAAC;IAElD,IAAI,CAACD,IAAI,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACX,QAAQ,SAAS,EAAEQ,QAAQ,CAAC,CAChDI,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAQ,IAAI;QACjBP,KAAK,CAACO,GAAG,CAACC,OAAO,CAAC;QAClB,IAAI,CAACjB,MAAM,GAAG,EAAE;MAClB,CAAC;MACDkB,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAACC,GAAG,CAAC;QAClBV,KAAK,CAAC,qBAAqB,CAAC;MAC9B;KACD,CAAC;EACN;EAEAY,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACtB,QAAQ,EAAE;MAClBU,KAAK,CAAC,yBAAyB,CAAC;MAChC;;IAGF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACb,QAAQ,CAAC;IAE1C,IAAI,CAACF,IAAI,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACX,QAAQ,MAAM,EAAEQ,QAAQ,CAAC,CAC7CI,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAQ,IAAI;QAAG,IAAI,CAAChB,MAAM,GAAGgB,GAAG,CAAChB,MAAM;MAAE,CAAC;MACjDkB,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAACC,GAAG,CAAC;QAClBV,KAAK,CAAC,uBAAuB,CAAC;MAChC;KACD,CAAC;EACN;;;uBA1DWd,mBAAmB,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;YAAnB9B,mBAAmB;MAAA+B,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}